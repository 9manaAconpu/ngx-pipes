{"version":3,"sources":["../src/app/pipes/array/union.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAI9D;IAAA;IAWA,CAAC;IATC,6BAAS,GAAT,UAAU,GAAS,EAAE,IAAe;QAAf,oBAAe,GAAf,SAAe;QAClC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,OAAO;YAC/B,OAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAE,IAAI;gBACxC,OAAA,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;sBACjD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;sBACnB,QAAQ,EAAE,QAAQ,CAAC;YAFvB,CAEuB,EACzB,EAAE,CAAC,CACN;QALC,CAKD,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAZH;QAAC,iBAAU,EAAE;QACZ,WAAI,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;iBAAA;IAYtB,gBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,iBAAS,YAWrB,CAAA","file":"union.js","sourcesContent":["import {PipeTransform, Pipe, Injectable} from '@angular/core';\n\n@Injectable()\n@Pipe({name: 'union'})\nexport class UnionPipe implements PipeTransform {\n\n  transform(arr:any[], args:any[] = []):any[] {\n    return args.reduce((newArr, currArr) =>\n        newArr.concat(currArr.reduce((noDupArr, curr) =>\n            ((!~noDupArr.indexOf(curr) && !~newArr.indexOf(curr))\n              ? noDupArr.push(curr)\n              : noDupArr, noDupArr)\n        , [])\n      ), arr);\n  }\n}\n"]}