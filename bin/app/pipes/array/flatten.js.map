{"version":3,"sources":["../src/app/pipes/array/flatten.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAI9D;IAAA;IAYA,CAAC;IAVC,+BAAS,GAAT,UAAU,KAAW,EAAE,EAA4B;YAA3B,iCAAe,EAAf,oCAAe;QACrC,MAAM,CAAC,OAAO;cACR,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC;cAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEO,6BAAO,GAAf,UAAgB,KAAW;QAA3B,iBAGC;QAFC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,GAAU,EAAE,GAAQ,IAAK,OAAA,GAAG,YAAY,KAAK;YAC9D,GAAG,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EADL,CACK,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAbH;QAAC,iBAAU,EAAE;QACZ,WAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;;mBAAA;IAaxB,kBAAC;AAAD,CAZA,AAYC,IAAA;AAZY,mBAAW,cAYvB,CAAA","file":"flatten.js","sourcesContent":["import {PipeTransform, Pipe, Injectable} from '@angular/core';\n\n@Injectable()\n@Pipe({name: 'flatten'})\nexport class FlattenPipe implements PipeTransform {\n\n  transform(array:any[], [shallow = false]:any[] = []):any[] {\n    return shallow\n        ? [].concat.apply([], array)\n        : this.flatten(array);\n  }\n\n  private flatten(array:any[]): any[] {\n    return array.reduce((arr: any[], elm: any) => elm instanceof Array ?\n        arr.concat(this.flatten(elm)) : arr.concat(elm), []);\n  }\n}\n"]}