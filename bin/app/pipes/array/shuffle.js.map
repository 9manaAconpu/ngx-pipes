{"version":3,"sources":["../src/app/pipes/array/shuffle.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAK9D;IAAA;IAiBA,CAAC;IAfC,wDAAwD;IACxD,6DAA6D;IAC7D,+BAAS,GAAT,UAAU,GAAU;QAClB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAED,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC1D,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACtD,+BAAuD,EAAtD,mBAAW,EAAE,mBAAW,CAA+B;QAC1D,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;;IAClB,CAAC;IAlBH;QAAC,iBAAU,EAAE;QACZ,WAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;;mBAAA;IAkBxB,kBAAC;AAAD,CAjBA,AAiBC,IAAA;AAjBY,mBAAW,cAiBvB,CAAA","file":"shuffle.js","sourcesContent":["import {PipeTransform, Pipe, Injectable} from '@angular/core';\nimport {extractProperty} from '../utils/utils';\n\n@Injectable()\n@Pipe({name: 'shuffle'})\nexport class ShufflePipe implements PipeTransform {\n\n  // Using a version of the Fisher-Yates shuffle algorithm\n  // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n  transform(arr: any[]): any[] {\n    if (!Array.isArray(arr)) {\n      return arr;\n    }\n\n    let shuffled = Array.from(arr);\n    for (let i = 0, n = arr.length - 1, l = n - 1; i < l; ++i) {\n      const j = Math.floor(Math.random() * (n - i + 1)) + i;\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n    return shuffled;\n  }\n}\n"]}