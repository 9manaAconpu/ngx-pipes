{"version":3,"sources":["../src/app/pipes/math/percentage.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAI9D;IAAA;IAUA,CAAC;IARC,kCAAS,GAAT,UAAU,GAAW,EAAE,KAAmB,EAAE,KAAsB;QAA3C,qBAAmB,GAAnB,WAAmB;QAAE,qBAAsB,GAAtB,aAAsB;QAChE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAED,IAAM,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;QAClC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;IAC/C,CAAC;IAXH;QAAC,iBAAU,EAAE;QACZ,WAAI,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC;;sBAAA;IAW3B,qBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,sBAAc,iBAU1B,CAAA","file":"percentage.js","sourcesContent":["import {PipeTransform, Pipe, Injectable} from '@angular/core';\n\n@Injectable()\n@Pipe({name: 'percentage'})\nexport class PercentagePipe implements PipeTransform {\n\n  transform(num: number, total: number = 100, floor: boolean = false): number {\n    if (isNaN(num)) {\n      return num;\n    }\n\n    const percent = num * 100 / total;\n    return floor ? Math.floor(percent) : percent;\n  }\n}\n"]}