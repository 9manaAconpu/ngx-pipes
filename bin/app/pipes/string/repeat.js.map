{"version":3,"sources":["../src/app/pipes/string/repeat.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAI9D;IAAA;IAaA,CAAC;IAXC,8BAAS,GAAT,UAAU,GAAU,EAAE,EAAmC;YAAnC,4BAAmC,EAAlC,UAAK,EAAL,0BAAK,EAAE,UAAc,EAAd,mCAAc;QAC1C,IAAI,KAAK,GAAW,CAAC,CAAC,CAAC,CAAC;QACxB,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;YACf,MAAM,IAAI,UAAU,EAAE,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;IACnE,CAAC;IAEO,2BAAM,GAAd,UAAe,GAAW,EAAE,CAAS,EAAE,SAAiB;QACtD,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;IAC/E,CAAC;IAdH;QAAC,iBAAU,EAAE;QACZ,WAAI,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;;kBAAA;IAcvB,iBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,kBAAU,aAatB,CAAA","file":"repeat.js","sourcesContent":["import {PipeTransform, Pipe, Injectable} from '@angular/core';\n\n@Injectable()\n@Pipe({name: 'repeat'})\nexport class RepeatPipe implements PipeTransform {\n\n  transform(str:string, [n = 1, separator = '']: any[] = []):string {\n    let times: number = ~~n;\n    if (times <= 0) {\n      throw new RangeError();\n    }\n    return times == 1 ? str : this.repeat(str, times - 1, separator);\n  }\n\n  private repeat(str: string, n: number, separator: string): string {\n    return n == 0 ? str : (str + separator + this.repeat(str, n - 1, separator));\n  }\n}\n"]}